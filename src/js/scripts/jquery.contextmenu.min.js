/*!
 * jQuery.filer
 * Copyright (c) 2015 CreativeDream
 * Website: http://creativedream.net/plugins/jquery.contextmenu
 * Version: 1.0 (20-05-2015)
 * Requires: jQuery v1.7.1 or later
 */
(function($) {
    "use strict";

    $.fn.contextmenu = function(options) {
        var selector = this.selector,
            opts = $.extend({}, $.fn.contextmenu.defaults, options),
            s = $(this),
            c = '#jContextMenu',
            b = $('<div id="'+c.substr(1)+'"></div>'),
            f = {
                init: function(){
                    f.bindOpts();

                    return b;
                },

                bindOpts: function(){
                    $('body').on("contextmenu", selector, f.bindContext);

                    $(window).on('click blur resize scroll contextmenu', function(){
                        f.hide();
                    });
                    b.on("click contextmenu", function(e){
                        e.stopPropagation();
                    });
                },
                
                bindContext: function(e){
                    e.preventDefault();
                    f.currentEvent = e;
                    f.currentEl = $(this);
                    f.create();
                    return false;
                },

                create: function(){
                    f.hide(true);
                    if (opts.buttons.length == 0 && !$.isArray(opts.buttons)) {
                        f.hide();
                        return false
                    }
                    var n = "<ul>";
                    $.each(opts.buttons, function (i, s) {
                        if ($.isEmptyObject(this)) {
                            n += '<li class="divider"></li>'
                        } else {
                            var t = typeof opts.template == "function" ? opts.template({
                                id: i,
                                text: s.text,
                                href: s.href,
                                addClass: s.addClass
                            }) : opts.template;
                            
                            t = $(t);
                            
                            n += t[0].outerHTML;
                        }
                    });
                    n += "</ul>";
                    
                    b.append(n);
                    f.show();
                    f.position();
                },

                position: function(){
                    var mouse = {
                            x: f.currentEvent.pageX,
                            y: f.currentEvent.pageY,
                        },
                        wn = {
                            width: $(window).width(),
                            height: $(window).height(),
                            scrollTop: $(window).scrollTop(),
                            scrollLeft: $(window).scrollLeft(),
                        };
                    
                    if(mouse.y + b.outerHeight() > wn.height + wn.scrollTop){
                        mouse.y = mouse.y - b.outerHeight();   
                    }
                    if(mouse.x + b.outerWidth() > wn.width + wn.scrollLeft){
                        mouse.x = mouse.x - b.outerHeight();   
                    }
                    
                    b.css({
                        top: mouse.y,
                        left: mouse.x
                    });
                },

                show: function(){
                    opts.onShow && typeof opts.onShow == "function" ? opts.onShow(b, f.currentEl, f.currentEvent) ? b.show().appendTo('body') : f.hide() : b.show().appendTo('body');
                },

                hide: function(clear){
                    !clear && opts.onHide && typeof opts.onHide == "function" ? opts.onHide(b, f.currentEl, f.currentEvent) : null;
                    b.hide().html(""); $(c).remove();
                }
            };
        
        f.init();
        return this;
    }
    
    $.fn.contextmenu.defaults = {
        template: function (e) {
            return "<li><a" + (e.href ? ' href="'+e.href+'"' : '') + (e.addClass ? ' class="'+e.addClass+'"' : '') + ">" + e.text + "</a></li>"
        },
        buttons: [
            {
                text: "Button",
                addClass: "dance",
                href: "csacsa",
                onClick: function(){
                    console.log(arguments);
                }
            }
        ],
        onShow: null,
        onHide: null
    }
})(jQuery);